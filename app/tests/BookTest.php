<?php

/**
 * @created 07.11.14 - 14:15
 * @author stefanriedel
 */

class BookTest extends TestCase {

	/**
	 * Test Helper traits
	 */
	use Way\Tests\ModelHelpers;

	public function testHasCategories() {
		$oBook = $this->_getBook();
		$oCategory1 = \Models\Category::create(['name' => 'PHP', 'active' => true]);
		$oCategory2 = \Models\Category::create(['name' => 'Laravel', 'active' => true]);

		$oBook->categories()->attach($oCategory1->id);
		$oBook->categories()->attach($oCategory2->id);
		$this->assertEquals(2, $oBook->categories()->count());

	}

	/**
	 * testing book has an author
	 */
	public function testHasAuthor() {

		$oRelease = new \Carbon\Carbon();
		$oRelease->setDate( 2014, 01, 01 );

		$oBook = new \Models\Book( [
			'name'         => 'Laravel Tutorial für Einsteiger',
			'release_date' => $oRelease,
			'asin'         => 'BHJUG238716'
		] );

		$oAuthor = \Models\Author::create( [
			'name'    => 'Stefan Riedel',
			'country' => 'Germany'
		] );

		$oBook->author()->associate( $oAuthor )->save();
		$this->assertEquals( 'Stefan Riedel', $oBook->author->name );
		$this->assertEquals( 'Germany', $oBook->author->country );
	}

	/**
	 * testing images for books
	 */
	public function testHasImages() {
		$oBook      = $this->_getBook();
		$oImage     = new \Models\Image ();
		$sFakeImage = \Faker\Provider\Image::image( $dir = '/tmp', $width = 600, $height = 400 );
		$oImage->setOriginalImage( $sFakeImage );
		$oBook->images()->save( $oImage );
		$this->assertEquals( 1, $oBook->images()->count() );
		$oImage->delete();
	}

	public function testScopeAsin() {
		$this->_getBook();
		$oBook = \Models\Book::asin( 'BHJUG238716' )->first();
		$this->assertEquals( 1, $oBook->id );
	}

	public function testReleaseDateIsCarbon() {
		$oBook = $this->_getBook();

		$this->assertInstanceOf( '\Carbon\Carbon', $oBook->release_date );
	}

	public function testScopeAuthorName() {
		$this->_getBook();
		$oBooks = \Models\Book::authorName( 'Stefan Riedel' )->get();
		$this->assertEquals( 1, $oBooks->count() );
	}

	/**
	 * @return Models\Book
	 */
	protected function _getBook() {
		$oRelease = new \Carbon\Carbon();
		$oRelease->setDate( 2014, 01, 01 );

		$oAuthor = \Models\Author::create( [
			'name'    => 'Stefan Riedel',
			'country' => 'Germany'
		] );

		$oBook = new \Models\Book ( [
			'name'         => 'Laravel Tutorial für Einsteiger',
			'release_date' => $oRelease,
			'asin'         => 'BHJUG238716',
			'iban'         => 'BHJUG2387161233423redaskjdh'
		] );

		$oBook->author()->associate( $oAuthor )->save();

		return $oBook;
	}

	public function setUp() {
		parent::setUp(); // TODO: Change the autogenerated stub
		$this->_resetEvents();
	}


	private function _resetEvents() {
		// Define the models that have event listeners.
		$aModels = array( 'Models\Image' );

		// Reset their event listeners.
		foreach ( $aModels as $sModel ) {

			// Flush any existing listeners.
			call_user_func( array( $sModel, 'flushEventListeners' ) );

			// Reregister them.
			call_user_func( array( $sModel, 'boot' ) );
		}
	}

}


